# ===============================
# = MVC
# ===============================
spring.mvc.async.request-timeout = 300
spring.mvc.date-format = DD/MM/YYYY
spring.mvc.dispatch-options-request = true
spring.mvc.dispatch-trace-request = false
spring.mvc.formcontent.filter.enabled = true
# ===============================
# = THYMELEAF
# ===============================
spring.thymeleaf.cache = true
spring.thymeleaf.check-template=true
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/bd_curso_spring?useSSL=false
spring.datasource.username=postgres
spring.datasource.password=rouser135
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
#	spring.datasource.testWhileIdle=true
#	spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

